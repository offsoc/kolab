apiVersion: v1
kind: Pod
metadata:
  labels:
    app: test
  name: kolab-test
  namespace: kolab-ci
spec:
  containers:
    - name: mariadb
      env:
        - name: MYSQL_ROOT_PASSWORD
          value: simple123
        - name: TZ
          value: "+02:00"
        - name: DB_HKCCP_DATABASE
          value: kolabdev
        - name: DB_HKCCP_USERNAME
          value: kolabdev
        - name: DB_HKCCP_PASSWORD
          value: simple123
        - name: DB_KOLAB_DATABASE
          value: kolab
        - name: DB_KOLAB_USERNAME
          value: kolab
        - name: DB_KOLAB_PASSWORD
          value: simple123
        - name: DB_RC_DATABASE
          value: roundcube
        - name: DB_RC_USERNAME
          value: roundcube
        - name: DB_RC_PASSWORD
          value: simple123
      image: image-registry.openshift-image-registry.svc:5000/kolab-ci/mariadb
      imagePullPolicy: Always
      resources: {}
      securityContext:
        capabilities:
          drop:
            - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true

    - name: redis
      image: image-registry.openshift-image-registry.svc:5000/kolab-ci/redis
      imagePullPolicy: Always
      resources: {}
      securityContext:
        capabilities:
          drop:
            - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true

    - name: imap
      env:
        - name: APP_SERVICES_DOMAIN
          value: localhost
        - name: SERVICES_PORT
          value: "8000"
        - name: IMAP_ADMIN_LOGIN
          value: cyrus-admin
        - name: IMAP_ADMIN_PASSWORD
          value: simple123
      image: image-registry.openshift-image-registry.svc:5000/kolab-ci/imap
      imagePullPolicy: Always
      resources: {}
      securityContext:
        capabilities:
          drop:
            - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true

    - name: webapp
      env:
        - name: NOENVFILE
          value: "true"
        - name: APP_SERVICES_ALLOWED_DOMAINS
          value: webapp,localhost
        - name: PASSPORT_PRIVATE_KEY
        - name: PASSPORT_PUBLIC_KEY
      image: image-registry.openshift-image-registry.svc:5000/kolab-ci/webapp
      imagePullPolicy: Always
      resources: {}
      securityContext:
        capabilities:
          drop:
          - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: kolab-ci-sa-dockercfg-z8n94
  nodeName: osw124.ocp04.ait-msp-infra.net
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kolab-ci-sa
  serviceAccountName: kolab-ci-sa
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
          - configMap:
              items:
              - key: service-ca.crt
                path: service-ca.crt
              name: openshift-service-ca.crt
