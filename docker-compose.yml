version: '3'
services:
  kolab:
    build:
      context: ./docker/kolab/
    container_name: kolab
    depends_on:
      - mariadb
    extra_hosts:
      - "kolab.mgmt.com:127.0.0.1"
    healthcheck:
      interval: 10s
      test: test -f /tmp/kolab-init.done
      timeout: 5s
      retries: 30
    hostname: kolab.mgmt.com
    image: kolab
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      - ./docker/certs/ca.cert:/etc/pki/tls/certs/ca.cert:ro
      - ./docker/certs/ca.cert:/etc/pki/ca-trust/source/anchors/ca.cert:ro
      - ./docker/certs/kolab.hosted.com.cert:/etc/pki/tls/certs/kolab.hosted.com.cert
      - ./docker/certs/kolab.hosted.com.key:/etc/pki/tls/certs/kolab.hosted.com.key
      - ./docker/certs/kolab.mgmt.com.cert:/etc/pki/tls/certs/kolab.mgmt.com.cert
      - ./docker/certs/kolab.mgmt.com.key:/etc/pki/tls/certs/kolab.mgmt.com.key
      - ./docker/kolab/utils:/root/utils:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
  kurento:
    build:
      context: ./docker/kurento-media-server/
    container_name: kolab-kurento
    hostname: kurento.meet.hosted.com
    image: kolab-kurento
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
  mariadb:
    container_name: kolab-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: Welcome2KolabSystems
    healthcheck:
      interval: 10s
      test: test -e /var/run/mysqld/mysqld.sock
      timeout: 5s
      retries: 30
    image: mariadb
    network_mode: host
  openvidu:
    build:
      context: ./docker/openvidu/
    container_name: kolab-openvidu
    depends_on:
      - kurento
    hostname: meet.hosted.com
    image: kolab-openvidu
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      #- ./docker/certs/ca.cert:etc/pki/tls/certs/ca.cert:ro
      #- ./docker/certs/ca.cert:/etc/pki/ca-trust/source/anchors/ca.cert:ro
      #- ./docker/certs/meet.hosted.com.cert:/etc/pki/tls/certs/meet.hosted.com.cert
      #- ./docker/certs/meet.hosted.com.key:/etc/pki/tls/certs/meet.hosted.com.key
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
  redis:
    build:
      context: ./docker/redis/
    container_name: kolab-redis
    hostname: redis
    image: redis
    network_mode: host
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
  worker:
    build:
      context: ./docker/worker/
    container_name: kolab-worker
    depends_on:
      - kolab
    hostname: worker
    image: kolab-worker
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      - ./src:/home/worker/src.orig:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
