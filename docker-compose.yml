version: '3'
services:
  coturn:
    container_name: kolab-coturn
    environment:
      - DB_NAME=${OPENVIDU_COTURN_REDIS_DB}
      - DB_PASSWORD=turn
      - MIN_PORT=57001
      - MAX_PORT=65535
      - REDIS_IP=${OPENVIDU_COTURN_REDIS_IP}
      - TURN_LISTEN_PORT=3478
    hostname: sturn.mgmt.com
    image: openvidu/openvidu-coturn:1.0.0
    network_mode: host
    restart: on-failure
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
  kolab:
    build:
      context: ./docker/kolab/
    container_name: kolab
    depends_on:
      - mariadb
    extra_hosts:
      - "kolab.mgmt.com:127.0.0.1"
    healthcheck:
      interval: 10s
      test: test -f /tmp/kolab-init.done
      timeout: 5s
      retries: 30
    hostname: kolab.mgmt.com
    image: kolab
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/:ro
      - ./docker/certs/ca.cert:/etc/pki/tls/certs/ca.cert:ro
      - ./docker/certs/ca.cert:/etc/pki/ca-trust/source/anchors/ca.cert:ro
      - ./docker/certs/kolab.hosted.com.cert:/etc/pki/tls/certs/kolab.hosted.com.cert
      - ./docker/certs/kolab.hosted.com.key:/etc/pki/tls/certs/kolab.hosted.com.key
      - ./docker/certs/kolab.mgmt.com.cert:/etc/pki/tls/certs/kolab.mgmt.com.cert
      - ./docker/certs/kolab.mgmt.com.key:/etc/pki/tls/certs/kolab.mgmt.com.key
      - ./docker/kolab/utils:/root/utils:ro
      - ./src/.env:/.dockerenv:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
  mariadb:
    container_name: kolab-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: Welcome2KolabSystems
    healthcheck:
      interval: 10s
      test: test -e /var/run/mysqld/mysqld.sock
      timeout: 5s
      retries: 30
    image: mariadb
    network_mode: host
  openvidu:
    container_name: kolab-openvidu
    environment:
      - COTURN_IP=${OPENVIDU_PUBLIC_IP}
      - COTURN_REDIS_DBNAME=2
      - COTURN_REDIS_IP=127.0.0.1
      - HTTP_PORT=${OPENVIDU_SERVER_PORT}
      - KMS_STUN_IP=${OPENVIDU_PUBLIC_IP}
      - KMS_STUN_PORT=3478
      - KMS_TURN_URL=openvidu:openvidu@${OPENVIDU_PUBLIC_IP}
      - KMS_URIS=["ws://localhost:8888/kurento"]
      - OPENVIDU_DOMAIN_OR_PUBLIC_IP=${OPENVIDU_PUBLIC_IP}
      - OPENVIDU_SECRET=${OPENVIDU_API_PASSWORD}
      - SERVER_PORT=${OPENVIDU_SERVER_PORT}
      - SERVER_SSL_ENABLED=false
    hostname: openvidu.hosted.com
    image: openvidu/openvidu-server-kms:2.13.0
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
  proxy:
    build:
      context: ./docker/proxy/
    container_name: kolab-proxy
    hostname: kanarip.internet-box.ch
    image: kolab-proxy
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      - ./docker/certs/:/etc/certs/:ro
      - /etc/letsencrypt/:/etc/letsencrypt/:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
  redis:
    build:
      context: ./docker/redis/
    container_name: kolab-redis
    hostname: redis
    image: redis
    network_mode: host
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
  worker:
    build:
      context: ./docker/worker/
    container_name: kolab-worker
    depends_on:
      - kolab
    hostname: worker
    image: kolab-worker
    network_mode: host
    tmpfs:
      - /run
      - /tmp
      - /var/run
      - /var/tmp
    tty: true
    volumes:
      - ./src:/home/worker/src.orig:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
