apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  name: redis
  generation: 2
  namespace: kolab-dev
  labels:
    app.kubernetes.io/part-of: kolab-app
    template: redis-ephemeral-template
    template.openshift.io/template-instance-owner: 43c18c6d-fbf8-4b42-9973-8b076cb68a1c
spec:
  strategy:
    type: Recreate
    resources: {}
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - redis
        from:
          kind: ImageStreamTag
          name: 'redis:6-el8'
          namespace: openshift
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: redis
    app: redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: redis
        app: redis
    spec:
      volumes:
        - name: redis-data
          emptyDir: {}
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" ==
                  "PONG"
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: redis
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: database-password
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 6379
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: redis-data
              mountPath: /var/lib/redis/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:6855b540f34204970055df2d13a4b0d756a229853a7a8c5fb3255334e0c935d8
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets: []
  paused: false
