#!/usr/bin/python3
"""
This is the implementation of a (postfix) MTA policy service
"""

import json
import time
import sys
import logging
import requests


def read_request_input():
    """
        Read a single policy request from sys.stdin, and return a dictionary
        containing the request.
    """
    start_time = time.time()

    policy_request = {}
    end_of_request = False

    while not end_of_request:
        if (time.time() - start_time) >= 10:
            logging.warning("took too long reading the request.")
            print("action=DEFER_IF_PERMIT Temporary error, try again later.\n")
            sys.stdout.flush()
            sys.exit(0)

        request_line = sys.stdin.readline()

        if request_line.strip() == '':
            if 'request' in policy_request:
                end_of_request = True
        else:
            request_line = request_line.strip()
            request_key = request_line.split('=')[0]
            request_value = '='.join(request_line.split('=')[1:])

            policy_request[request_key] = request_value

    return policy_request


if __name__ == "__main__":
    name = sys.argv[1]
    path = sys.argv[2]
    URL = f"SERVICES_HOST{path}"

    logging.root.handlers = []
    # Set to logging.DEBUG to enable logging
    logging.basicConfig(level=logging.ERROR,
                        format='%(asctime)s %(levelname)s %(message)s',
                        filename=f"/var/log/kolab/postfix-policy-{name}.log",
                        filemode='a')

    while True:
        REQUEST = read_request_input()

        try:
            RESPONSE = requests.post(
                URL,
                data=REQUEST,
                verify=True
            )
        # pylint: disable=broad-except
        except Exception:
            logging.warning(f"request failed.")
            print("action=DEFER_IF_PERMIT Temporary error, try again later.\n")
            sys.stdout.flush()
            sys.exit(0)

        try:
            R = json.loads(RESPONSE.text)
        # pylint: disable=broad-except
        except Exception:
            logging.warning(f"Failed to load json from request.")
            print("action=DEFER_IF_PERMIT Temporary error, try again later.\n")
            sys.stdout.flush()
            sys.exit(0)

        if 'prepend' in R:
            for prepend in R['prepend']:
                print("action=PREPEND {0}".format(prepend))

        if 'log' in R:
            for line in R['log']:
                logging.info(line)

        if RESPONSE.ok:
            print("action={0}\n".format(R['response']))
            logging.debug("success with response: %s" % R['response'])
        else:
            print("action={0} {1}\n".format(R['response'], R['reason']))
            logging.info("failed with reason: %s" % R['reason'])

        sys.stdout.flush()
        sys.exit(0)
